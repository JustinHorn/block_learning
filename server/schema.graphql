type Query {
  hello: String!
  feed: [Resource!]!
  authorize: User
}

type Mutation {
  login(email: String!, password: String!): AuthPayLoad
  register(name: String!, email: String!, password: String!): AuthPayLoad

  addResource(title: String!, href: String!, tags: [String!]!): Resource

  updateResource(id: Int!, title: String, tags: [String!]): Resource

  deleteResource(id: Int!): DeletedResource
}

type AuthPayLoad {
  token: String!
  user: User!
}

type User {
  id: Int!
  name: String!
  email: String!
  posts: [Resource!]!
}

type DeletedResource {
  id: Int!
  title: String!
  href: String!
  postedBy: User
  date: String!
}

type Resource {
  id: Int!
  title: String!
  href: String!
  tags: [Tag!]!
  date: String!
  postedBy: User
}

type Tag {
  id: Int!
  name: String!
  resources: [Resource!]!
}
